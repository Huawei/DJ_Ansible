# Required Parameters:
#   cgName:            consistency group name
#
# Optional Parameters:
#   deletePairs:       delete pairs after remove from CG, default: yes, options: yes, no
#

- block:
    - set_fact:
        outPairIds: "{{ outPairIds|default({}) }}"

    - name: Query Replication CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/CONSISTENTGROUP?filter=NAME%3A%3A{{cgName|urlencode}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: CG
      failed_when: (CG.json.error.code|int != 0) or ('data' not in CG.json) or (CG.json.data|length != 1)

    - name: Get Replication CG ID
      set_fact:
        deletedCgId: "{{ CG.json.data[0].ID }}"
        isStandby: "{{ CG.json.data[0].RUNNINGSTATUS == GLOBAL.replication.syncStatus.standby }}"

    - name: Query Replication Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/REPLICATIONPAIR?filter=CGID%3A%3A{{deletedCgId}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: ReplicationPairs

    - name: Get Replication Pair IDs
      vars:
        query: "[*].ID"
      set_fact:
        pairIds: "{{ ReplicationPairs.json.data | json_query(query) }}"

    - name: Split Replication CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/SPLIT_CONSISTENCY_GROUP"
        method: PUT
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          ID: "{{ deletedCgId }}"
      register: SPLIT_CG
      when: isStandby|bool == False

    - name: Check Split Result
      debug:
        msg: "{{ SPLIT_CG.json.error }}"
      failed_when: SPLIT_CG.json.error.code|int != 0
      when: isStandby|bool == False

    - name: Delete Replication CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/CONSISTENTGROUP/{{deletedCgId}}"
        method: DELETE
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: DELETE_CG

    - name: Check Delete CG Result
      debug:
        msg: "{{ DELETE_CG.json.error }}"
      failed_when: DELETE_CG.json.error.code|int != 0

- block:
    - name: Delete Replication Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/REPLICATIONPAIR/{{item}}"
        method: DELETE
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: DELETE_PAIRS
      with_items: "{{ pairIds }}"

    - name: Check Delete Pairs Results
      vars:
        queryError: "[*].json.error.code"
        queryMsg: "[*].json.error"
      debug:
        msg: "{{ DELETE_PAIRS.results | json_query(queryMsg) }}"
      failed_when: DELETE_PAIRS.results | json_query(queryError) | difference([0]) | length > 0

  when: 
    - deletePairs|default(True)|bool == True
    - pairIds|length > 0

- block:
    - name: Sync Replication Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/REPLICATIONPAIR/sync"
        method: PUT
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          ID: "{{ item }}"
      register: SYNC_PAIRS
      with_items: "{{ pairIds }}"

    - name: Check Sync Pairs Results
      vars:
        queryError: "[*].json.error.code"
        queryMsg: "[*].json.error"
      debug:
        msg: "{{ SYNC_PAIRS.results | json_query(queryMsg) }}"
      failed_when: SYNC_PAIRS.results | json_query(queryError) | difference([0]) | length > 0

  when: 
    - deletePairs|default(True)|bool == False
    - pairIds|length > 0

    - set_fact:
        outPairIds: "{{ outPairIds | combine({cgName: pairIds }) }}"

    - debug: var=outPairIds
