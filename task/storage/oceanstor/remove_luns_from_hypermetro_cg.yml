# Required Parameters:
#   cgName:            consistency group name
#   localLunIds:       a list of local LUN IDs
#   remoteLunIds:      a list of remote LUN IDs
#
# Optional Parameters:
#   deletePairs:       delete pairs after remove from CG, default: yes, options: yes, no
#


- block:
    - name: Query HyperMetro CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetro_ConsistentGroup?filter=NAME%3A%3A{{cgName|urlencode}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: CG
      failed_when: (CG.json.error.code|int != 0) or ('data' not in CG.json) or (CG.json.data | length != 1)

    - name: Get HyperMetro CG ID
      set_fact:
        modifiedCgId: "{{ CG.json.data[0].ID }}"
        isPreferred: "{{ CG.json.data[0].PRIORITYSTATIONTYPE == '0' }}"
        modifiedDomainId: "{{ CG.json.data[0].DOMAINID }}"

  when: cgName|default(none) is not none


- set_fact:
    existPairIds: []

- name: Check Exist HyperMetro Pairs
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetroPair?filter=DOMAINID%3A%3A{{modifiedDomainId}}%20and%20LOCALOBJID%3A%3A{{item.1}}%20and%20REMOTEOBJID%3A%3A{{remoteLunIds[item.0]}}"
    method: GET
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: EXIST_PAIRS
  with_indexed_items: "{{ localLunIds }}"

- name: Get Exist HyperMetro Pair IDs
  vars:
    queryPairId: "[*].ID"
  set_fact:
    existPairIds: "{{ existPairIds + EXIST_PAIRS.results[item.0].json.data | default([]) | json_query(queryPairId) }}"
  with_indexed_items: "{{ localLunIds }}"


- name: Pause HyperMetro CG
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetro_ConsistentGroup/stop"
    method: PUT
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
    body_format: json
    body:
      ID: "{{ modifiedCgId }}"
  register: STOP_CG

- name: Check Pause Result
  debug:
    msg: "{{ STOP_CG.json.error }}"
  failed_when: STOP_CG.json.error.code|int != 0

- name: Remove HyperMetro Pairs from CG
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/hyperMetro/associate/pair?ID={{modifiedCgId}}&ASSOCIATEOBJID={{item}}"
    method: DELETE
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: REMOVE_PAIRS
  with_items: "{{ existPairIds }}"

- name: Check Remove Pairs Results
  vars:
    queryError: "[*].json.error.code"
    queryMsg: "[*].json.error"
  debug:
    msg: "{{ REMOVE_PAIRS.results | json_query(queryMsg) }}"
  failed_when: REMOVE_PAIRS.results | json_query(queryError) | difference([0]) | length > 0

- name: Sync HyperMetro CG
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetro_ConsistentGroup/sync"
    method: PUT
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
    body_format: json
    body:
      ID: "{{ modifiedCgId }}"
  register: SYNC_CG

- name: Check Sync Result
  debug:
    msg: "{{ SYNC_CG.json.error }}"
  failed_when: SYNC_CG.json.error.code|int != 0

- name: Wait Sync Complete
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetro_ConsistentGroup/{{modifiedCgId}}"
    method: GET
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: SYNC_CG_WAIT
  vars:
    syncStatus: "{{ SYNC_CG_WAIT.json.data.RUNNINGSTATUS }}"
  retries: "{{ GLOBAL.metro.syncRetries }}"
  delay: "{{ GLOBAL.metro.syncDelay }}"
  until: syncStatus != GLOBAL.metro.syncStatus.syncing
  when: waitSync|default(False)|bool == True

- block:
    - name: Delete HyperMetro Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetroPair/{{item}}"
        method: DELETE
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: DELETE_PAIRS
      with_items: "{{ existPairIds }}"

    - name: Check Delete Pairs Results
      vars:
        queryError: "[*].json.error.code"
        queryMsg: "[*].json.error"
      debug:
        msg: "{{ DELETE_PAIRS.results | json_query(queryMsg) }}"
      failed_when: DELETE_PAIRS.results | json_query(queryError) | difference([0]) | length > 0

  when:
    - deletePairs|default(True)|bool == True
    - existPairIds|length > 0

- block:
    - name: Sync HyperMetro Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetroPair/synchronize_hcpair"
        method: PUT
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          ID: "{{ item }}"
      register: SYNC_PAIRS
      with_items: "{{ existPairIds }}"

    - name: Check Sync Pairs Results
      vars:
        queryError: "[*].json.error.code"
        queryMsg: "[*].json.error"
      debug:
        msg: "{{ SYNC_PAIRS.results | json_query(queryMsg) }}"
      failed_when: SYNC_PAIRS.results | json_query(queryError) | difference([0]) | length > 0

  when:
    - deletePairs|default(True)|bool == False
    - existPairIds|length > 0