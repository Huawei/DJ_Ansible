# Required Parameters:
#   pgName:            protection group name

- set_fact:
    removedLunIds: []
    removedLgIds: []
    deletedPg: "{{ none }}"

- name: Query PG
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/protectgroup?filter=protectGroupName%3A%3A{{pgName|urlencode}}"
    method: GET
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: PG
  failed_when: ('data' not in PG.json) or (PG.json.data|length == 0)

- name: Check Replicas
  vars:
    pg: "{{ PG.json.data[0] }} "
    replicaNum: "{{ pg.cdpGroupNum|int + pg.cloneGroupNum|int + pg.replicationGroupNum|int + pg.snapshotGroupNum|int + pg.drStarNum|int +pg.hyperMetroGroupNum|int}}"
  fail: 
    msg: "Cannot be deleted, replicas exists"
  when: replicaNum|int > 0

- name: Get PG ID
  set_fact:
    deletedPg: "{{ PG.json.data[0] }}"

- name: Query LUNs in PG
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/lun/associate?ASSOCIATEOBJTYPE=57846&ASSOCIATEOBJID={{deletedPg.protectGroupId}}&range=[0-{{deletedPg.lunNum}}]"
    method: GET
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: LUNS
  when: 
    - deletedPg.lunNum|int > 0
    - deletedPg.lunGroupId == '-1'

- name: Get LUN IDs
  vars:
    query: "[*].ID"
  set_fact:
    removedLunIds: "{{ LUNS.json.data | json_query(query) }}"
  when: 
    - deletedPg.lunNum|int > 0
    - deletedPg.lunGroupId == '-1'

- name: Remove LUNs from PG
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/protectgroup/associate?protectGroupId={{deletedPg.protectGroupId}}&ASSOCIATEOBJTYPE=11&ASSOCIATEOBJID={{item}}"
    method: DELETE
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: REMOVE_LUNS
  with_items: "{{ removedLunIds }}"
  when: 
    - deletedPg.lunNum|int > 0
    - deletedPg.lunGroupId == '-1'

- name: Check Remove LUNs Results
  vars:
    queryError: "[*].json.error.code"
    queryMsg: "[*].json.error"
  debug:
    msg: "{{ REMOVE_LUNS.results | json_query(queryMsg) }}"
  failed_when: REMOVE_LUNS.results | json_query(queryError) | difference([0]) | length > 0
  when: 
    - deletedPg.lunNum|int > 0
    - deletedPg.lunGroupId == '-1'

- name: Delete PG
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/protectgroup/{{deletedPg.protectGroupId}}"
    method: DELETE
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: DELETE_PG

- name: Check Delete PG Result
  debug:
    msg: "{{ DELETE_PG.json.error }}"
  failed_when: DELETE_PG.json.error.code|int != 0