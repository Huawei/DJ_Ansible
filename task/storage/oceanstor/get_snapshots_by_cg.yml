# Get Snapshots by Snapshot Consistent Group
#
# Required parameters:
#   cgName:                    # Snapshot Consistent Group Name, can be replaced with cgId
#
# Optional parameters:
#   cgId:                      # Snapshot Consistent Group ID
# 
# Generated variables:
#   checkedSnapshots:          # Checked Snapshots associate with snapshot consistent group

- set_fact:
    checkedSnapshots: "{{ none }}"

- block:
    - name: Query Snapshot CG by Name
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/SNAPSHOT_CONSISTENCY_GROUP?filter=NAME%3A%3A{{cgName|urlencode}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: SCGs

    - name: Get CG ID
      vars:
        scg: "{{ SCGs.json.data[0] }} "
      set_fact:
        cgId: "{{ scg.ID }}"
      failed_when: ('data' not in SCGs.json) or (SCGs.json.data|length != 1)

  when: cgName|default(none) is not none

- name: Get Snapshots by CG ID
  uri:
    url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/snapshot/associate?ASSOCIATEOBJTYPE=57646&ASSOCIATEOBJID={{cgId}}"
    method: GET
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      iBaseToken: "{{ deviceToken }}"
      Cookie: "session={{ deviceSession }}"
  register: SNAPSHOTS

- set_fact:
    checkedSnapshots: "{{ SNAPSHOTS.json.data }}"
