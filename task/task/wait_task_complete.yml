# Required Parameters:
#   taskId:     Task ID
#
# Optional Parameters:
#   waitSeconds:    wait seconds, default 300
#   waitInterval:   wait interval, default 5
#   checkSuccess:   check if the task success, defaut: yes, options: yes/no

- name: Set default variables
  set_fact:
    statusMap: { '1': 'Not Start', '2': 'Running', '3': 'Succeeded', '4': 'Partially Succeeded', '5': 'Failed', '6': 'Timeout'}

- name: Wait Task Complete
  uri:
    url: "https://{{djHost}}:{{djPort}}{{ DJSERVICE.API.tasks }}/{{taskId}}"
    method: GET
    validate_certs: no
    headers:
      Accept: "application/json"
      Content-Type: "application/json;charset=utf8"
      X-Auth-Token: "{{djToken}}"
  register: TASKS
  vars:
    query: "[?id=='{{ taskId }}'].status"
  retries: "{{ (waitSeconds|default(300)|int / waitInterval|default(5)|int) | int }}"
  delay: "{{ waitInterval|default(5) }}"
  until: (TASKS.json | json_query(query) | first | int) not in [1, 2]    # 1/not_start, 2/running, 3/succeeded, 4/partially_succeeded, 5/failed, 6/timeout

- name: Task Details
  vars:
    task: "{{TASKS.json[item|int]}}"
  debug:
    msg:
      name: "{{task.name_en}}"
      sequence: "{{task.seq_no}}"
      progress: "{{task.progress}}"
      status: "{{statusMap[task.status|string]}}"
  with_sequence: start=0 count="{{TASKS.json|length}}"

- name: Task Result
  vars:
    queryStatus: "[?id=='{{ taskId }}'].status"
    status: "{{ TASKS.json | json_query(queryStatus) | first }}"
  debug:
    msg:
      Result: "{{statusMap[status]}}"

- name: Check Task Success
  vars:
    query: "[?id=='{{ taskId }}'].status"
    status: "{{ TASKS.json | json_query(query) | first }}"
  debug:
    msg: 
      Result: "{{statusMap[status]}}"
  failed_when: status|int != 3
  when: checkSuccess|default(True)|bool == True
