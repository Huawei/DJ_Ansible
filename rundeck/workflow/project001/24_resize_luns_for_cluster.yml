- name: Resize LUNs For Cluster
  hosts: localhost
  vars_files:
    - ../../../config/global.yml
    - ../../../config/project001.yml
  gather_facts: no
  become: no
  tasks:

    # Check Params
    - block:
        - set_fact:
            checked_params:
              Cluster: "{{ Cluster is not none and Cluster != DEFAULT.noneValue }}"
              Storage: "{{ (Storage is not none and Storage != DEFAULT.noneValue) and (Storage|string|length == 20) }}"
              Select_LUN: "{{ Select_LUN is not none and Select_LUN != DEFAULT.noneValue }}"
              Check_Result_1: "{{ ('lun' in Check_Result_1) }}"

        - name: Precheck_0_1 - Check Params
          debug:
            msg: "{{checked_params}}"
          failed_when: checked_params.values()|unique != [True]

    # Check Metro Params
    - block:
        - set_fact:
            checked_metro_params:
              Metro_Cluster: "{{ Metro_Cluster is not none and Metro_Cluster != DEFAULT.noneValue }}"
              Metro_Storage: "{{ (Metro_Storage is not none and Metro_Storage != DEFAULT.noneValue) and (Metro_Storage|string|length == 20) }}"
              Check_Result_2: "{{ ('lun' in Check_Result_2) }}"

        - name: Precheck_0_2 - Check Metro Params
          debug:
            msg: "{{checked_metro_params}}"
          failed_when: checked_metro_params.values()|unique != [True]

      when: Enable_HyperMetro == 'Y'

    # Check DR Params
    - block:
        - set_fact:
            checked_dr_params:
              DR_Cluster: "{{ DR_Cluster is not none and DR_Cluster != DEFAULT.noneValue }}"
              DR_Storage: "{{ (DR_Storage is not none and DR_Storage != DEFAULT.noneValue) and (DR_Storage|string|length == 20) }}"
              Check_Result_3: "{{ ('lun' in Check_Result_3) }}"

        - name: Precheck_0_3 - Check DR Params
          debug:
            msg: "{{checked_dr_params}}"
          failed_when: checked_dr_params.values()|unique != [True]
      when: Protection_Level|int >= 2

    # Check DR Test Params
    - block:
        - set_fact:
            checked_drtest_params:
              DR_Test_Cluster: "{{ DR_Test_Cluster is not none and DR_Test_Cluster != DEFAULT.noneValue }}"
              Check_Result_4: "{{ ('lun' in Check_Result_4) }}"

        - name: Precheck_0_4 - Check DR Test Params
          debug:
            msg: "{{checked_drtest_params}}"
          failed_when: checked_drtest_params.values()|unique != [True]
      when: Protection_Level|int == 3

    - set_fact:
        WBE_CODE: "{{ WBE_CODE }}"
        TICKET_NUMBER: "{{ TICKET_NUMBER }}"
        osType: "{{ Cluster.split('_')[1] }}"
        primaryLunNames: "{{ Select_LUN.split(',') }}"
        expandSize: "{{ Expand_Size }}"
        primaryDeviceSn: "{{ Storage|string }}"
        primaryRoom: "{{ Storage_Room }}"
        primarySite: "{{ AZ[Storage_Room]['dc'] }}"
        primaryClusterName: "{{ Cluster }}"
        primaryPgName: "{{ Protection_Group }}"
        sessionName: "{{ Session_Name }}"
        metroClusterName: "{{ Metro_Cluster }}"
        metroEnable: "{{ Enable_HyperMetro }}"
        metroDeviceSn: "{{ Metro_Storage|string }}"
        metroDeviceName: "{{ Metro_Storage_Name }}"
        metroRoom: "{{ Metro_Storage_Room }}"
        metroSite: "{{ AZ[Metro_Storage_Room]['dc'] }}"
        metroCgName: "{{ Metro_CG }}"
        protectLevel: "{{ Protection_Level }}"
        drCgName: "{{ DR_CG }}"
        drDevId: "{{ DR_Storage_ID }}"
        drDeviceSn: "{{ DR_Storage|string }}"
        drDeviceName: "{{ DR_Storage_Name }}"
        drRoom: "{{ DR_Storage_Room }}"
        drSite: "{{ AZ[DR_Storage_Room]['dc'] }}"
        drClusterName: "{{ DR_Cluster }}"
        drTestClusterName: "{{ DR_Test_Cluster }}"
        drTestLgName: "{{ DR_Test_LUN_Group }}"
        drTestCgName: "{{ DR_Test_CG }}"
        drTestCgId: "{{ DR_Test_CG_ID }}"
        drTestCgActivated: "{{ (DR_Test_CG_Status == SNAPCG.activated.enum) if (DR_Test_CG_Status is not none and DR_Test_CG_Status != DEFAULT.noneValue) else False }}"

    - set_fact:
        Precheck_1_Execute: True
        Precheck_2_Execute: True
        Precheck_3_Execute: "{{ protectLevel|int == 3 }}"

    - block:
        - name: Precheck_1 - Check DJ Storages
          debug:
            msg:
              primaryDeviceSn: "{{ primaryDeviceSn|default(none) }}"
              metroDeviceSn: "{{ metroDeviceSn|default(none) }}"
              drDeviceSn: "{{ drDeviceSn|default(none) }}"

        - import_tasks: "{{GLOBAL.baseDir}}/task/user/login.yml"

        - import_tasks: "{{GLOBAL.baseDir}}/task/volume/check_storages.yml"

        # End Precheck_1
      when: Precheck_1_Execute

    - block:
        - name: Precheck_2 - Check LUNs
          debug:
            msg:
              device: "{{ primaryDeviceSn }}"
              luns: "{{ primaryLunNames }}"

        - import_tasks: "{{GLOBAL.baseDir}}/task/volume/check_volumes.yml"
          vars:
            volumeNames: "{{ primaryLunNames }}"
            filterDeviceId: "{{ primaryDeviceId }}"

        - set_fact:
            primaryVolumesTier: []
            primaryLunIds: []
            primaryVolumeIds: []

        - set_fact:
            primaryVolumesTier: "{{ primaryVolumesTier + [ checkedVolumes[item.0].service_level_name ] }}"
            primaryLunIds: "{{ primaryLunIds + [ checkedVolumes[item.0].volume_raw_id ] }}"
            primaryVolumeIds: "{{ primaryVolumeIds + [ checkedVolumes[item.0].id ] }}"
          with_indexed_items: "{{ primaryLunNames }}"

        - name: Login Device
          set_fact:
            deviceSn: "{{ primaryDeviceSn }}"

        - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/login_storage.yml"

        - set_fact:
            primaryDeviceName: "{{ deviceName }}"
            primaryDeviceHost: "{{ deviceHost }}"
            primaryDevicePort: "{{ devicePort }}"
            primaryDeviceToken: "{{ deviceToken }}"
            primaryDeviceSession: "{{ deviceSession }}"

        - name: Get HyperMetro Pairs
          uri:
            url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/HyperMetroPair?filter=LOCALOBJNAME%3A%3A{{item}}"
            method: GET
            validate_certs: no
            headers:
              Accept: "application/json"
              Content-Type: "application/json;charset=utf8"
              iBaseToken: "{{ deviceToken }}"
              Cookie: "session={{ deviceSession }}"
          register: METRO_PAIRS
          with_items: "{{ primaryLunNames }}"
          when:
            - metroEnable == 'Y'

        - set_fact:
            metroLunIds: []
            metroLunNames: []
            metroVolumesTier: []
            metroVolumeIds: []

        - name: Get Metro LUNs
          vars:
            queryMetroLunIds: "[*].REMOTEOBJID"
            queryMetroLunNames: "[*].REMOTEOBJNAME"
          set_fact:
            metroLunIds: "{{ metroLunIds + METRO_PAIRS.results[item.0].json.data | default([]) | json_query(queryMetroLunIds) }}"
            metroLunNames: "{{ metroLunNames + METRO_PAIRS.results[item.0].json.data | default([]) | json_query(queryMetroLunNames) }}"
          with_indexed_items: "{{ primaryLunNames }}"
          when: metroEnable == 'Y'

        - import_tasks: "{{GLOBAL.baseDir}}/task/volume/check_volumes.yml"
          vars:
            volumeNames: "{{ metroLunNames }}"
            filterDeviceId: "{{ metroDeviceId }}"
          when:
            - metroEnable == 'Y'
            - metroLunNames|length > 0

        - set_fact:
            metroVolumesTier: "{{ metroVolumesTier + [ checkedVolumes[item.0].service_level_name ] }}"
            metroVolumeIds: "{{ metroVolumeIds + [ checkedVolumes[item.0].id ] }}"
          with_indexed_items: "{{ metroLunNames }}"
          when:
            - metroEnable == 'Y'
            - metroLunNames|length > 0

        - name: Check Exist Replication Pairs
          uri:
            url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/REPLICATIONPAIR?filter=LOCALRESNAME%3A%3A{{item}}"
            method: GET
            validate_certs: no
            headers:
              Accept: "application/json"
              Content-Type: "application/json;charset=utf8"
              iBaseToken: "{{ deviceToken }}"
              Cookie: "session={{ deviceSession }}"
          register: DR_PAIRS
          with_items: "{{ primaryLunNames }}"
          when:
            - protectLevel|int >= 2

        - set_fact:
            drLunIds: []
            drLunNames: []
            drVolumesTier: []
            drVolumeIds: []

        - name: Get DR LUNs
          vars:
            queryDrLunIds: "[? REMOTEDEVICEID=='{{drDevId}}'].REMOTERESID"
            queryDrLunNames: "[? REMOTEDEVICEID=='{{drDevId}}'].REMOTERESNAME"
          set_fact:
            drLunIds: "{{ drLunIds + DR_PAIRS.results[item.0].json.data | default([]) | json_query(queryDrLunIds) }}"
            drLunNames: "{{ drLunNames + DR_PAIRS.results[item.0].json.data | default([]) | json_query(queryDrLunNames) }}"
          with_indexed_items: "{{ primaryLunNames }}"
          when:
            - protectLevel|int >= 2

        - import_tasks: "{{GLOBAL.baseDir}}/task/volume/check_volumes.yml"
          vars:
            volumeNames: "{{ drLunNames }}"
          when:
            - protectLevel|int >= 2
            - drLunNames|length > 0

        - set_fact:
            drVolumesTier: "{{ drVolumesTier + [ checkedVolumes[item.0].service_level_name ] }}"
            drVolumeIds: "{{ drVolumeIds + [ checkedVolumes[item.0].id ] }}"
          with_indexed_items: "{{ drLunNames }}"
          when:
            - protectLevel|int >= 2
            - drLunNames|length > 0

        # End Precheck_2
      when: Precheck_2_Execute

    - block:
        - name: Precheck_3 - Check DR Test LUNs
          debug:
            msg:
              device: "{{ drDeviceSn }}"

        - name: Login Device
          set_fact:
            deviceSn: "{{ drDeviceSn }}"

        - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/login_storage.yml"

        - set_fact:
            drDeviceName: "{{ deviceName }}"
            drDeviceHost: "{{ deviceHost }}"
            drDevicePort: "{{ devicePort }}"
            drDeviceToken: "{{ deviceToken }}"
            drDeviceSession: "{{ deviceSession }}"

        - name: Query Snapshots in CG
          uri:
            url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/snapshot/associate?ASSOCIATEOBJTYPE=57646&ASSOCIATEOBJID={{drTestCgId}}"
            method: GET
            validate_certs: no
            headers:
              Accept: "application/json"
              Content-Type: "application/json;charset=utf8"
              iBaseToken: "{{ deviceToken }}"
              Cookie: "session={{ deviceSession }}"
          register: SNAPSHOTS
          when: protectLevel|int == 3

        - set_fact:
            drTestLunIds: "{{ SNAPSHOTS.json.data | default([]) | json_query('[*].ID') }}"
            drTestLunNames: "{{ SNAPSHOTS.json.data | default([]) | json_query('[*].NAME') }}"
          when: protectLevel|int == 3

        # End Precheck_3
      when:
        - Precheck_3_Execute
        - drLunNames|length > 0

    - block:

        # Begin Workflow Steps

        - set_fact:

            # Pause HyperMetro CG
            Step_1_1_Execute: "{{ (metroEnable == 'Y' and metroLunNames|length > 0) }}"
            Step_1_1_Completed: False

            # Split Replication CG
            Step_1_2_Execute: "{{ (protectLevel|int >= 2 and drLunNames|length > 0) }}"
            Step_1_2_Completed: False

            # Resize LUNs
            Step_1_3_Execute: True
            Step_1_3_Completed: False

            # Sync HyperMetro CG
            Step_1_4_Execute: "{{ (metroEnable == 'Y' and metroLunNames|length > 0) }}"
            Step_1_4_Completed: False

            # Sync Replication CG
            Step_1_5_Execute: "{{ (protectLevel|int >= 2 and drLunNames|length > 0) }}"
            Step_1_5_Completed: False

            # Activate & Deactivate DR Test Snapshot CG
            Step_2_1_Execute: "{{ (protectLevel|int == 3 and drLunNames|length > 0) and (drTestCgActivated|bool == False) }}"
            Step_2_1_Completed: False

            # Sync DR Device
            Step_2_2_Execute: "{{ (protectLevel|int == 3 and drLunNames|length > 0) }}"
            Step_2_2_Completed: False

            # Insert Primary LUNs to KPI table
            Step_3_1_Execute: "{{ True }}"
            Step_3_1_Completed: False

            # Insert Metro LUNs to KPI table
            Step_3_2_Execute: "{{ (metroEnable == 'Y' and metroLunNames|length > 0) }}"
            Step_3_2_Completed: False

            # Insert DR LUNs to KPI table
            Step_3_3_Execute: "{{ (protectLevel|int >= 2 and drLunNames|length > 0) }}"
            Step_3_3_Completed: False

            # Insert DR Test LUNs to KPI table
            Step_3_4_Execute: "{{ (protectLevel|int == 3 and drLunNames|length > 0) and (drTestCgActivated|bool == False) }}"
            Step_3_4_Completed: False

        - name: Workflow - Resize LUNs for Host
          debug:
            msg:
              Step_1_1: "[{{Step_1_1_Execute}}] Pause HyperMetro CG"
              Step_1_2: "[{{Step_1_2_Execute}}] Split Replication CG"
              Step_1_3: "[{{Step_1_3_Execute}}] Resize LUNs"
              Step_1_4: "[{{Step_1_4_Execute}}] Sync HyperMetro CG"
              Step_1_5: "[{{Step_1_5_Execute}}] Sync Replication CG"
              Step_2_1: "[{{Step_2_1_Execute}}] Activate & Deactivate DR Test Snapshots"
              Step_2_2: "[{{Step_2_2_Execute}}] Sync DR Device"
              Step_3_1: "[{{Step_3_1_Execute}}] Insert Primary LUNs to KPI table"
              Step_3_2: "[{{Step_3_2_Execute}}] Insert Metro LUNs to KPI table"
              Step_3_3: "[{{Step_3_3_Execute}}] Insert DR LUNs to KPI table"
              Step_3_4: "[{{Step_3_4_Execute}}] Insert DR Test LUNs to KPI table"

        - block:
            - name: Step_1_1 - Pause HyperMetro CG
              debug:
                msg:
                  params:
                    cgName: "{{ metroCgName }}"
                    device: "{{ primaryDeviceName }}"

            - set_fact:
                deviceHost: "{{ primaryDeviceHost }}"
                devicePort: "{{ primaryDevicePort }}"
                deviceSn: "{{ primaryDeviceSn }}"
                deviceToken: "{{ primaryDeviceToken }}"
                deviceSession: "{{ primaryDeviceSession }}"

            - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/pause_hypermetro_cg.yml"
              vars:
                cgName: "{{ metroCgName }}"

            - set_fact:
                Step_1_1_Completed: True

            # End Step_1_1

          # End block
          when: Step_1_1_Execute

        - block:
            - name: Step_1_2 - Split Replication CG
              debug:
                msg:
                  params:
                    cgName: "{{ drCgName }}"
                    device: "{{ primaryDeviceName }}"

            - set_fact:
                deviceHost: "{{ primaryDeviceHost }}"
                devicePort: "{{ primaryDevicePort }}"
                deviceSn: "{{ primaryDeviceSn }}"
                deviceToken: "{{ primaryDeviceToken }}"
                deviceSession: "{{ primaryDeviceSession }}"

            - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/split_replication_cg.yml"
              vars:
                cgName: "{{ drCgName }}"

            - set_fact:
                Step_1_2_Completed: True

            # End Step_1_2

          # End block
          when: Step_1_2_Execute

        - block:
            - name: Step_1_3 - Resize LUNs
              debug:
                msg:
                  params:
                    volumeNames: "{{ primaryLunNames + metroLunNames + drLunNames }}"
                    volumeIds: "{{ primaryVolumeIds + metroVolumeIds + drVolumeIds }}"
                    addSize: "{{ expandSize }}"

            - include_tasks: "{{GLOBAL.baseDir}}/task/volume/expand_volumes.yml"
              vars:
                volumeIds: "{{ primaryVolumeIds + metroVolumeIds + drVolumeIds }}"
                addSize: "{{ expandSize }}"

            - set_fact:
                Step_1_3_Completed: True

            # End Step_1_3

          # End block
          when: Step_1_3_Execute

        - block:
            - name: Step_1_4 - Sync HyperMetro CG
              debug:
                msg:
                  params:
                    cgName: "{{ metroCgName }}"
                    device: "{{ primaryDeviceName }}"

            - set_fact:
                deviceHost: "{{ primaryDeviceHost }}"
                devicePort: "{{ primaryDevicePort }}"
                deviceSn: "{{ primaryDeviceSn }}"
                deviceToken: "{{ primaryDeviceToken }}"
                deviceSession: "{{ primaryDeviceSession }}"

            - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/sync_hypermetro_cg.yml"
              vars:
                cgName: "{{ metroCgName }}"

            - set_fact:
                Step_1_4_Completed: True

            # End Step_1_4

          # End block
          when: Step_1_4_Execute

        - block:
            - name: Step_1_5 - Sync Replication CG
              debug:
                msg:
                  params:
                    cgName: "{{ drCgName }}"
                    device: "{{ primaryDeviceName }}"

            - set_fact:
                deviceHost: "{{ primaryDeviceHost }}"
                devicePort: "{{ primaryDevicePort }}"
                deviceSn: "{{ primaryDeviceSn }}"
                deviceToken: "{{ primaryDeviceToken }}"
                deviceSession: "{{ primaryDeviceSession }}"

            - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/sync_replication_cg.yml"
              vars:
                cgName: "{{ drCgName }}"

            - set_fact:
                Step_1_5_Completed: True

            # End Step_1_5

          # End block
          when: Step_1_5_Execute

        - block:
            - name: Step_2_1 - Activate & Deactivate DR Test Snapshot CG
              debug:
                msg:
                  params:
                    cgName: "{{ drTestCgName }}"
                    device: "{{ drDeviceName }}"

            - set_fact:
                deviceHost: "{{ drDeviceHost }}"
                devicePort: "{{ drDevicePort }}"
                deviceSn: "{{ drDeviceSn }}"
                deviceToken: "{{ drDeviceToken }}"
                deviceSession: "{{ drDeviceSession }}"

            - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/activate_snapshot_cg.yml"
              vars:
                cgName: "{{ drTestCgName }}"

            - import_tasks: "{{GLOBAL.baseDir}}/task/storage/oceanstor/deactivate_snapshot_cg.yml"
              vars:
                cgName: "{{ drTestCgName }}"

            - set_fact:
                Step_2_1_Completed: True

            # End Step_2_1

          # End block
          when: Step_2_1_Execute

        - block:
            - name: Step_2_2 - Sync DR Device
              debug:
                msg:
                  params:
                    deviceName: "{{ drDeviceName }}"

            - set_fact:
                deviceName: "{{ drDeviceName }}"

            - import_tasks: "{{GLOBAL.baseDir}}/task/storage/sync_storage.yml"

            - set_fact:
                Step_2_2_Completed: True

            # End Step_2_2

          # End block
          when: Step_2_2_Execute

        - block:
            - name: Step_3_1 - Insert Primary LUNs to KPI table
              debug:
                msg:
                  params:
                    lunIds: "{{ primaryLunIds }}"
                    device: "{{ primaryDeviceName }}"

            - include_tasks: update_lun_kpi_table.yml
              vars:
                TYPE_OF_OPERATION: "modify"
                WBE_CODE: "{{ WBE_CODE }}"
                TICKET_NUMBER: "{{ TICKET_NUMBER }}"
                SYSTEM_NAME: "{{ primaryClusterName }}"
                SITE: "{{ primarySite }}"
                ENVIRONMENT: "{{ osType }}"
                STORAGE_CLASS: "{{ primaryVolumesTier[item.0] }}"
                CAPACITY_GB: "{{ expandSize }}"
                STORAGE: "{{ primaryDeviceName }}"
                VDISK_UID: "{{ item.1 }}"
              with_indexed_items: "{{ primaryLunIds }}"

            - set_fact:
                Step_3_1_Completed: True

            # End Step_3_1

          # End block
          when: Step_3_1_Execute

        - block:
            - name: Step_3_2 - Insert Metro LUNs to KPI table
              debug:
                msg:
                  params:
                    lunIds: "{{ metroLunIds }}"
                    device: "{{ metroDeviceName }}"

            - include_tasks: update_lun_kpi_table.yml
              vars:
                TYPE_OF_OPERATION: "modify"
                WBE_CODE: "{{ WBE_CODE }}"
                TICKET_NUMBER: "{{ TICKET_NUMBER }}"
                SYSTEM_NAME: "{{ metroClusterName }}"
                SITE: "{{ metroSite }}"
                ENVIRONMENT: "{{ osType }}"
                STORAGE_CLASS: "{{ metroVolumesTier[item.0] }}"
                CAPACITY_GB: "{{ expandSize }}"
                STORAGE: "{{ metroDeviceName }}"
                VDISK_UID: "{{ item.1 }}"
              with_indexed_items: "{{ metroLunIds }}"

            - set_fact:
                Step_3_2_Completed: True

            # End Step_3_2

          # End block
          when: Step_3_2_Execute

        - block:
            - name: Step_3_3 - Insert DR LUNs to KPI table
              debug:
                msg:
                  params:
                    lunIds: "{{ drLunIds }}"
                    device: "{{ drDeviceName }}"

            - include_tasks: update_lun_kpi_table.yml
              vars:
                TYPE_OF_OPERATION: "modify"
                WBE_CODE: "{{ WBE_CODE }}"
                TICKET_NUMBER: "{{ TICKET_NUMBER }}"
                SYSTEM_NAME: "{{ drClusterName }}"
                SITE: "{{ drSite }}"
                ENVIRONMENT: "{{ osType }}"
                STORAGE_CLASS: "{{ drVolumesTier[item.0] }}"
                CAPACITY_GB: "{{ expandSize }}"
                STORAGE: "{{ drDeviceName }}"
                VDISK_UID: "{{ item.1 }}"
              with_indexed_items: "{{ drLunIds }}"

            - set_fact:
                Step_3_3_Completed: True

            # End Step_3_3

          # End block
          when: Step_3_3_Execute

        - block:
            - name: Step_3_4 - Insert DR Test LUNs to KPI table
              debug:
                msg:
                  params:
                    lunIds: "{{ drTestLunIds }}"
                    device: "{{ drDeviceName }}"

            - include_tasks: update_lun_kpi_table.yml
              vars:
                TYPE_OF_OPERATION: "modify"
                WBE_CODE: "{{ WBE_CODE }}"
                TICKET_NUMBER: "{{ TICKET_NUMBER }}"
                SYSTEM_NAME: "{{ drTestClusterName }}"
                SITE: "{{ drSite }}"
                ENVIRONMENT: "{{ osType }}"
                STORAGE_CLASS: ""
                CAPACITY_GB: "{{ expandSize }}"
                STORAGE: "{{ drDeviceName }}"
                VDISK_UID: "{{ item.1 }}"
              with_indexed_items: "{{ drTestLunIds }}"

            - set_fact:
                Step_3_4_Completed: True

            # End Step_3_4

          # End block
          when: Step_3_4_Execute

    # End Workflow

    # Show Results

    - block:
        - name: Result_1_1 - Pause HyperMetro CG
          debug:
            msg:
              params:
                cgName: "{{ metroCgName }}"
                device: "{{ primaryDeviceName }}"
              result:
                succeeded: "{{ Step_1_1_Completed }}"
          when: Step_1_1_Execute

        - name: Result_1_2 - Split Replication CG
          debug:
            msg:
              params:
                cgName: "{{ drCgName }}"
                device: "{{ primaryDeviceName }}"
              result:
                succeeded: "{{ Step_1_2_Completed }}"
          when: Step_1_2_Execute

        - name: Result_1_3 - Resize LUNs
          debug:
            msg:
              params:
                volumeNames: "{{ primaryLunNames + metroLunNames + drLunNames }}"
                volumeIds: "{{ primaryVolumeIds + metroVolumeIds + drVolumeIds }}"
                addSize: "{{ expandSize }}"
              result:
                succeeded: "{{ Step_1_3_Completed }}"
          when: Step_1_3_Execute

        - name: Result_1_4 - Sync HyperMetro CG
          debug:
            msg:
              params:
                cgName: "{{ metroCgName }}"
                device: "{{ primaryDeviceName }}"
              result:
                succeeded: "{{ Step_1_4_Completed }}"
          when: Step_1_4_Execute

        - name: Result_1_5 - Sync Replication CG
          debug:
            msg:
              params:
                cgName: "{{ drCgName }}"
                device: "{{ primaryDeviceName }}"
              result:
                succeeded: "{{ Step_1_5_Completed }}"
          when: Step_1_5_Execute

        - name: Result_2_1 - Activate & Deactivate DR Test Snapshot CG
          debug:
            msg:
              params:
                cgName: "{{ drTestCgName }}"
                device: "{{ drDeviceName }}"
              result:
                succeeded: "{{ Step_2_1_Completed }}"
          when: Step_2_1_Execute

        - name: Result_2_2 - Sync DR Device
          debug:
            msg:
              params:
                device: "{{ drDeviceName }}"
              result:
                succeeded: "{{ Step_2_2_Completed }}"
          when: Step_2_2_Execute

        - name: Result_3_1 - Insert Primary LUNs to KPI table
          debug:
            msg:
              params:
                lunIds: "{{ primaryLunIds }}"
                device: "{{ primaryDeviceName }}"
              result:
                succeeded: "{{ Step_3_1_Completed }}"
          when: Step_3_1_Execute

        - name: Result_3_2 - Insert Metro LUNs to KPI table
          debug:
            msg:
              params:
                lunIds: "{{ metroLunIds }}"
                device: "{{ metroDeviceName }}"
              result:
                succeeded: "{{ Step_3_2_Completed }}"
          when: Step_3_2_Execute

        - name: Result_3_3 - Insert DR LUNs to KPI table
          debug:
            msg:
              params:
                lunIds: "{{ drLunIds }}"
                device: "{{ drDeviceName }}"
              result:
                succeeded: "{{ Step_3_3_Completed }}"
          when: Step_3_3_Execute

        - name: Result_3_4 - Insert DR Test LUNs to KPI table
          debug:
            msg:
              params:
                lunIds: "{{ drTestLunIds }}"
                device: "{{ drDeviceName }}"
              result:
                succeeded: "{{ Step_3_4_Completed }}"
          when: Step_3_4_Execute