---

# Required Parameters:
#   cgName:            consistency group name
#   volumes:           a list of volume names
#
# Examples:
#   --extra-vars '{"cgName": "cg1", "volumes": ["DJ_AT_0002", "DJ_AT_0003"]}'
#
# Optional Parameters:
#   deletePairs:        delete pairs after remove from CG, default: yes, options: yes, no
#   deleteReplica:      delete replica LUN, default: no, options: yes, no
#
# Examples:
#   --extra-vars '{"cgName": "cg1", "volumes": ["DJ_AT_0002", "DJ_AT_0003"], "deletePairs": yes, "deleteReplica": yes}'
#

- name: Remove Volumes from Clone Consistency Group
  hosts: localhost
  vars:
    deletePairs: yes
    deleteReplica: no
  vars_files:
    - ../../../global.yml
  gather_facts: no
  become: no
  tasks:
    - import_tasks: ../check_volume_affinity.yml

    - import_tasks: ../login_storage.yml

    - name: Query Clone CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clone_consistentgroup?cgType=1&filter=name%3A%3A{{cgName|urlencode}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: CLONE_CG
      failed_when: CLONE_CG.json.data is not defined

    - name: Get Clone CG ID
      set_fact:
        cgId: "{{ CLONE_CG.json.data[0].ID }}"

    - name: Show Clone CG ID
      debug:
        msg: 
          cgId: "{{ cgId }}"

    - name: Query Clone Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/deviceManager/rest/{{deviceSn}}/clonepair/associate?ASSOCIATEOBJTYPE=57703&ASSOCIATEOBJID={{cgId}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: CLONE_PAIRS

    - name: Get Clone Pair IDs
      vars:
        query: "[? sourceID=='{{item}}'].ID"
        pairId: "{{ CLONE_PAIRS.json.data | json_query(query) }}"
      set_fact:
        pairIds: "{{ pairIds|default([]) + pairId }}"
      with_items: "{{ volumeIds }}"

    - name: Show Clone Pair IDs
      debug:
        msg: 
          pairIds: "{{ pairIds }}"

    - name: Remove Clone Pairs from CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clone_consistentgroup/remove_associate"
        method: DELETE
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          ID: "{{ cgId }}"
          ASSOCIATEOBJTYPE: 57702
          ASSOCIATEOBJID: "{{ item }}"
      register: REMOVE_PAIRS
      with_items: "{{ pairIds }}"

    - name: Show Remove Pair Result
      vars:
        queryError: "[*].json.error"
      debug:
        msg: "{{ REMOVE_PAIRS.results | json_query(queryError) }}"

    - name: Delete Clone Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clonepair/{{item}}"
        method: DELETE
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          ID: "{{ item }}"
          isDeleteDstLun: "{{ deleteReplica }}"
      register: DELETE_PAIRS
      with_items: "{{ pairIds }}"
      when: deletePairs

    - name: Show Delete Pair Result
      vars:
        queryError: "[*].json.error"
      debug:
        msg: "{{ DELETE_PAIRS.results | json_query(queryError) }}"