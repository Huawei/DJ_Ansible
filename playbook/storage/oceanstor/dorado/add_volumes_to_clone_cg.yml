---

# Required Parameters:
#   cgName:            consistency group name
#   volumes:           a list of volume names
#
# Examples:
#   --extra-vars '{"cgName": "cg1", "volumes": ["DJ_AT_0002", "DJ_AT_0003"]}'
#
# Generated Parameters (can be overwritten)
#   suffix:            clone LUN name suffix, default: volumeName_yyyymmddThhmiss
#
# Examples:
#   --extra-vars '{"cgName": "cg1", "volumes": ["DJ_AT_0002", "DJ_AT_0003"], "suffix": "20200205" }'

- name: Add Volumes to Clone Consistency Group
  hosts: localhost
  vars:
    suffix: "{{ ansible_date_time.iso8601_basic_short }}"
  vars_files:
    - ../../../global.yml
  gather_facts: yes
  become: no
  tasks:
    - import_tasks: ../check_volume_affinity.yml

    - import_tasks: ../login_storage.yml

    - name: Query Clone CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clone_consistentgroup?cgType=1&filter=name%3A%3A{{cgName|urlencode}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: CLONE_CG
      failed_when: CLONE_CG.json.data is not defined

    - name: Get Clone CG ID
      set_fact:
        cgId: "{{ CLONE_CG.json.data[0].ID }}"

    - name: Show Clone CG ID
      debug:
        msg: 
          cgId: "{{ cgId }}"

    - name: Create Clone Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clonepair/create"
        method: POST
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          sourceID: "{{ item.1 }}"
          name: "{{ volumes[item.0] }}_{{suffix}}"
      register: CLONE_PAIRS
      with_indexed_items: "{{ volumeIds }}"

    - name: Get Clone Pair IDs
      vars:
        queryPairId: "[*].json.data.ID"
      set_fact:
        pairIds: "{{ CLONE_PAIRS.results | json_query(queryPairId) }}"

    - name: Show Clone Pair IDs
      debug:
        msg: 
          pairIds: "{{ pairIds }}"

    - name: Sync Clone Pairs
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clonepair/synchronize"
        method: PUT
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          ID: "{{ item }}"
          copyAction: 3         # 0:start, 1:pause, 2:stop, 3:resume
      register: SYNC_PAIRS
      with_items: "{{ pairIds }}"

    - name: Show Sync Pair Result
      vars:
        queryError: "[*].json.error"
      debug:
        msg: "{{ SYNC_PAIRS.results | json_query(queryError) }}"

    - name: Wait Sync Complete
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clonepair/{{item}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: WAIT_SYNC
      vars:
        syncStatus: "{{ WAIT_SYNC.json.data.syncStatus }}"
      retries: 1440
      delay: 60                      
      until: syncStatus != '1'    # 0:unsynced, 1:syncing, 2:normal, 3:sync_paused
      with_items: "{{ pairIds }}"

    - name: Add Clone Pair to CG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/clone_consistentgroup/create_associate"
        method: POST
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          ID: "{{ cgId }}"
          ASSOCIATEOBJTYPE: 57702
          ASSOCIATEOBJID: "{{ item }}"
      register: ADD_PAIRS
      with_items: "{{ pairIds }}"

    - name: Show Add Pair Result
      vars:
        queryError: "[*].json.error"
      debug:
        msg: "{{ ADD_PAIRS.results | json_query(queryError) }}"