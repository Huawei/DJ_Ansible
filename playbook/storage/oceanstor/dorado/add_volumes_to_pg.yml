---

# Required Parameters:
#   pgName:            protection group name
#   volumes:           a list of primary volumes
#
# Examples:
#   --extra-vars '{"pgName": "pg1", "volumes": ["DJ_AT_0002", "DJ_AT_0003"]}'
#

- name: Add Volumes to Protection Group
  hosts: localhost
  vars_files:
    - ../../../global.yml
  gather_facts: no
  become: no
  tasks:
    - import_tasks: ../check_volume_affinity.yml

    - import_tasks: ../login_storage.yml

    - name: Query PG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/protectgroup?filter=protectGroupName%3A%3A{{pgName|urlencode}}"
        method: GET
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
      register: PG
      failed_when: PG.json.data is not defined

    - name: Get PG ID
      vars:
        pg: "{{ PG.json.data[0] }} "
      set_fact:
        pgId: "{{ pg.protectGroupId }}"

    - name: Show PG ID
      debug:
        msg: 
          pgId: "{{ pgId }}"

    - name: Add Volumes to PG
      uri:
        url: "https://{{deviceHost}}:{{devicePort}}/api/v2/protectgroup/associate"
        method: POST
        validate_certs: no
        headers:
          Accept: "application/json"
          Content-Type: "application/json;charset=utf8"
          iBaseToken: "{{ deviceToken }}"
          Cookie: "session={{ deviceSession }}"
        body_format: json
        body:
          protectGroupId: "{{ pgId }}"
          ASSOCIATEOBJTYPE: 11              # 11: LUN
          ASSOCIATEOBJID: "{{ item }}"
      register: ADD_VOLUMES
      with_items: "{{ volumeIds }}"

    - name: Show Add Volume Results
      vars:
        queryError: "[*].json.error"
      debug:
        msg: "{{ ADD_VOLUMES.results | json_query(queryError) }}"